import { Component } from '@angular/core';
import { AuthService } from './services/auth.service';
import { BehaviorSubject } from 'rxjs';
import { NotificationService } from './services/notification_ervice';
import {Router } from '@angular/router';
import { ThemeService } from './services/theme.service';
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
export class AppComponent {
  title = 'Angular-front';
  isAuthenticated$: BehaviorSubject<boolean>;
  isDispatcher$: BehaviorSubject<boolean>;
  constructor(
    public authService: AuthService,
    private notificationService: NotificationService,
    private themeService: ThemeService,
    private router: Router,
  ){
    this.isAuthenticated$ = this.authService.isAuthenticated$;
    this.isDispatcher$ = this.authService.isDispatcher$;
  }

  toggleTheme() {
    this.themeService.toggleTheme();
  }
  logout(): void {
    let userData = this.authService.getUserData()
    this.notificationService.showSuccess('Користувач '+userData.firstname + ' '+ userData.lastname + ' вашу сесію завершено!');
    this.authService.clearAuthData();
    //this.router.navigate(['/login']);
  }

  openStations() {
    const stationIds = [33, 34, 5, 6, 7, 8, 12, 13, 10, 11, 14, 16, 17, 18, 51, 53, 1, 3, 15, 20, 21, 22, 35, 36, 2, 29, 30, 38, 39, 40, 41, 32, 42, 52];
    const batchSize = 4;
    const delayBetweenBatches = 4000;

    stationIds.forEach((id, index) => {
      setTimeout(() => {
        const url = this.router.serializeUrl(this.router.createUrlTree(['/station', id]));
        window.open(url, '_blank');
      }, (Math.floor(index / batchSize) * delayBetweenBatches) + (index % batchSize) * 500);
    });
  }
}
